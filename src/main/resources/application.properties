spring.application.name=toolrent
server.port=8090

# Database Configuration
spring.datasource.url=jdbc:mysql://${DB_HOST}:3306/toolrent_db
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Keycloak/OAuth2 Config
spring.security.oauth2.client.registration.keycloak.client-id=toolrent-backend
spring.security.oauth2.client.registration.keycloak.client-secret=4o6KFvp9WcYxC7okErh1UeHCxehWs3Ry
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8090/login/oauth2/code/keycloak
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/toolrent-realm
spring.security.oauth2.client.provider.keycloak.user-name-attribute=test-admin

# Resource Server: Valida tokens JWT de Keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/toolrent-realm


# Logging para ver qué pasa
logging.level.com.toolrent=DEBUG
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG


# Springdoc OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# Custom OpenAPI Info
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.filter=true

# Muestra más detalles
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true